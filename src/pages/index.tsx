import { type NextPage } from "next";
import { getServerSession, Session } from "next-auth";
import { signIn, useSession, signOut } from "next-auth/react";
import Head from "next/head";
import { useRouter } from "next/router";
import { authOptions } from "~/server/auth";
import { api } from "~/utils/api";

const Home: NextPage = ({}) => {
  const { status, data: session } = useSession();
  const router = useRouter();

  const ownGroups = api.group.getAll.useQuery();
  const mut = api.group.createGroup.useMutation();
  if (status === "loading") {
    return <span>Loading...</span>;
  }

  if (!session) {
    return <button onClick={() => signIn("google")}>Sign In</button>;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Whatsup</h1>
      <button onClick={() => signOut()}>Sign Out</button>

      <p className="my-32">{JSON.stringify(ownGroups.data)}</p>
      <button onClick={() => mut.mutate()}>Create Group Fast</button>
      {ownGroups.data?.data?.map((group, index) => {
        return (
          <button
            onClick={() => {
              router.push(`/groups/${group.id}`);
            }}
            className="rounded-md bg-blue-400 px-2 py-1"
          >
            {group.name}
          </button>
        );
      })}
    </>
  );
};

export default Home;

export async function getServerSideProps(context: any) {
  const session = await getServerSession(context.req, context.res, authOptions);

  if (!session) {
    return {
      redirect: {
        destination: "/auth/login",
        permanent: false,
      },
    };
  }

  return {
    props: {},
  };
}
